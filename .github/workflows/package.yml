name: Package creo-automation

on:
  workflow_dispatch: {}

jobs:
  package-windows:
    name: Package (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install production npm deps
        run: npm ci --only=production
        shell: pwsh

      - name: Prepare dist folder (Windows)
        run: pwsh -NoProfile -ExecutionPolicy Bypass -File .\scripts\build-dist.ps1 -ProjectRoot $env:GITHUB_WORKSPACE
        shell: pwsh

      - name: Install Inno Setup (Chocolatey)
        run: choco install innosetup -y
        shell: pwsh

      - name: Compile Inno Setup installer
        run: |
          $iscc = (Get-Command ISCC -ErrorAction SilentlyContinue).Source
          if (-not $iscc) { $iscc = 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe' }
          Write-Host "Using ISCC: $iscc"
          & $iscc '.\installer\setup.iss'
        shell: pwsh

      - name: Package dist into zip
        run: |
          if (Test-Path dist) {
            Add-Type -AssemblyName System.IO.Compression.FileSystem
            [System.IO.Compression.ZipFile]::CreateFromDirectory('dist','dist_windows.zip')
          } else { Write-Error 'dist folder not found' }
        shell: pwsh

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: creo-windows-artifacts
          path: |
            dist_installer/*.exe
            dist_windows.zip

  package-linux:
    name: Package (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install production npm deps
        run: npm ci --only=production

      - name: Prepare dist folder (Linux)
        run: |
          set -e
          rm -rf dist || true
          mkdir -p dist
          cp -r server.js package.json app public views uploads creoson modules scripts dist/ || true
          cp -r node_modules dist/ || true
          echo "Created dist/"

      - name: Create tar.gz
        run: tar -czf creo-dist-linux.tar.gz dist

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: creo-linux-artifacts
          path: |
            creo-dist-linux.tar.gz
            dist
