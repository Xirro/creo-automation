name: Build Windows installer

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-installer:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install npm production deps
        run: npm ci --only=production
        shell: pwsh

      - name: Prepare dist folder
        run: pwsh -NoProfile -ExecutionPolicy Bypass -File .\scripts\build-dist.ps1 -ProjectRoot $env:GITHUB_WORKSPACE
        shell: pwsh

      - name: Read package.json version
        id: read_version
        run: |
          $pkg = Get-Content -Path package.json -Raw | ConvertFrom-Json
          $ver = $pkg.version
          if (-not $ver) { $ver = '0.0.0' }
          Write-Host "Package version: $ver"
          Write-Output "version=$ver" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh

      - name: Install Inno Setup
        run: choco install innosetup -y
        shell: pwsh

      - name: Compile Inno Setup script
        run: |
          $iscc = (Get-Command ISCC -ErrorAction SilentlyContinue).Source
          if (-not $iscc) { $iscc = 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe' }
          Write-Host "Using ISCC: $iscc"
          & $iscc '.\installer\setup.iss'
        shell: pwsh

      - name: Rename produced installer to include version
        run: |
          $outdir = Join-Path $env:GITHUB_WORKSPACE 'dist_installer'
          $baseExe = Join-Path $outdir 'CreoAutomationInstaller.exe'
          $ver = $env:version
          if (-not $ver) { Write-Error 'version env var not set'; exit 1 }
          $dstExe = Join-Path $outdir ("CreoAutomationInstaller-$ver.exe")
          if (Test-Path $baseExe) { Rename-Item -Path $baseExe -NewName (Split-Path $dstExe -Leaf) -Force; Write-Host "Renamed to $dstExe" } else { Write-Error "Expected $baseExe not found"; exit 1 }
        shell: pwsh

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: CreoAutomationInstaller
          path: dist_installer/CreoAutomationInstaller-${{ env.version }}.exe

      - name: Upload dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist